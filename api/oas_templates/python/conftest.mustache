# coding: utf-8

{{>partial_header}}

import os
import os.path
from pathlib import Path

import pytest
from algokit_utils import AlgoAmount, AlgorandClient, AppFactory, SigningAccount

from {{packageName}}.configuration import Configuration
from {{packageName}}.api_client import ApiClient


@pytest.fixture
def base_configuration():
    """Fixture to create a base configuration for tests."""
    # Default values for local Algorand node
    host = os.environ.get("ALGORAND_HOST", "http://localhost:4001")
    configuration = Configuration(
        host=host,
        api_key = {
            'api_key': os.environ.get("ALGORAND_API_TOKEN", "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa")
        }
    )

    return configuration

@pytest.fixture
def api_client_fixture(base_configuration):
    """Fixture to create a configured API client."""
    client = ApiClient(configuration=base_configuration)
    yield client
    # No cleanup needed for non-async client


@pytest.fixture
def algorand() -> AlgorandClient:
    return AlgorandClient.default_localnet()


@pytest.fixture
def bob(algorand: AlgorandClient) -> SigningAccount:
    new_account = algorand.account.random()
    dispenser = algorand.account.localnet_dispenser()
    algorand.account.ensure_funded(
        new_account, dispenser, AlgoAmount.from_algo(100), min_funding_increment=AlgoAmount.from_algo(1)
    )
    algorand.set_signer(sender=new_account.address, signer=new_account.signer)
    return new_account

@pytest.fixture
def alice(algorand: AlgorandClient) -> SigningAccount:
    new_account = algorand.account.random()
    dispenser = algorand.account.localnet_dispenser()
    algorand.account.ensure_funded(
        new_account, dispenser, AlgoAmount.from_algo(100), min_funding_increment=AlgoAmount.from_algo(1)
    )
    return new_account


@pytest.fixture
def arc56_factory(
    algorand: AlgorandClient,
    bob: SigningAccount,
) -> AppFactory:
    """Create AppFactory fixture"""
    arc56_raw_spec = (
        Path(__file__).parent / "artifacts"  / "dummy_app.arc56.json"
    ).read_text()
    return algorand.client.get_app_factory(app_spec=arc56_raw_spec, default_sender=bob.address)
