/* tslint:disable */
/* eslint-disable */
/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StateProofMessage } from './StateProofMessage';
import {
    StateProofMessageFromJSON,
    StateProofMessageFromJSONTyped,
    StateProofMessageToJSON,
    StateProofMessageToJSONTyped,
} from './StateProofMessage';

/**
 * Represents a state proof and its corresponding message
 * @export
 * @interface StateProof
 */
export interface StateProof {
    /**
     * 
     * @type {StateProofMessage}
     * @memberof StateProof
     */
    message: StateProofMessage;
    /**
     * The encoded StateProof for the message.
     * @type {string}
     * @memberof StateProof
     */
    stateProof: string;
}

/**
 * Check if a given object implements the StateProof interface.
 */
export function instanceOfStateProof(value: object): value is StateProof {
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('stateProof' in value) || value['stateProof'] === undefined) return false;
    return true;
}

export function StateProofFromJSON(json: any): StateProof {
    return StateProofFromJSONTyped(json, false);
}

export function StateProofFromJSONTyped(json: any, ignoreDiscriminator: boolean): StateProof {
    if (json == null) {
        return json;
    }
    return {
        
        'message': StateProofMessageFromJSON(json['Message']),
        'stateProof': json['StateProof'],
    };
}

export function StateProofToJSON(json: any): StateProof {
    return StateProofToJSONTyped(json, false);
}

export function StateProofToJSONTyped(value?: StateProof | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Message': StateProofMessageToJSON(value['message']),
        'StateProof': value['stateProof'],
    };
}

