/* tslint:disable */
/* eslint-disable */
/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ApplicationKVStorage } from './ApplicationKVStorage';
import {
    ApplicationKVStorageFromJSON,
    ApplicationKVStorageFromJSONTyped,
    ApplicationKVStorageToJSON,
    ApplicationKVStorageToJSONTyped,
} from './ApplicationKVStorage';

/**
 * An application's initial global/local/box states that were accessed during simulation.
 * @export
 * @interface ApplicationInitialStates
 */
export interface ApplicationInitialStates {
    /**
     * Application index.
     * @type {number}
     * @memberof ApplicationInitialStates
     */
    id: number;
    /**
     * An application's initial local states tied to different accounts.
     * @type {Array<ApplicationKVStorage>}
     * @memberof ApplicationInitialStates
     */
    appLocals?: Array<ApplicationKVStorage>;
    /**
     * 
     * @type {ApplicationKVStorage}
     * @memberof ApplicationInitialStates
     */
    appGlobals?: ApplicationKVStorage;
    /**
     * 
     * @type {ApplicationKVStorage}
     * @memberof ApplicationInitialStates
     */
    appBoxes?: ApplicationKVStorage;
}

/**
 * Check if a given object implements the ApplicationInitialStates interface.
 */
export function instanceOfApplicationInitialStates(value: object): value is ApplicationInitialStates {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function ApplicationInitialStatesFromJSON(json: any): ApplicationInitialStates {
    return ApplicationInitialStatesFromJSONTyped(json, false);
}

export function ApplicationInitialStatesFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplicationInitialStates {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'appLocals': json['app-locals'] == null ? undefined : ((json['app-locals'] as Array<any>).map(ApplicationKVStorageFromJSON)),
        'appGlobals': json['app-globals'] == null ? undefined : ApplicationKVStorageFromJSON(json['app-globals']),
        'appBoxes': json['app-boxes'] == null ? undefined : ApplicationKVStorageFromJSON(json['app-boxes']),
    };
}

export function ApplicationInitialStatesToJSON(json: any): ApplicationInitialStates {
    return ApplicationInitialStatesToJSONTyped(json, false);
}

export function ApplicationInitialStatesToJSONTyped(value?: ApplicationInitialStates | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'app-locals': value['appLocals'] == null ? undefined : ((value['appLocals'] as Array<any>).map(ApplicationKVStorageToJSON)),
        'app-globals': ApplicationKVStorageToJSON(value['appGlobals']),
        'app-boxes': ApplicationKVStorageToJSON(value['appBoxes']),
    };
}

