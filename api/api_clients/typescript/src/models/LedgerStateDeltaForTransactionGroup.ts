/* tslint:disable */
/* eslint-disable */
/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Contains a ledger delta for a single transaction group
 * @export
 * @interface LedgerStateDeltaForTransactionGroup
 */
export interface LedgerStateDeltaForTransactionGroup {
    /**
     * Ledger StateDelta object
     * @type {object}
     * @memberof LedgerStateDeltaForTransactionGroup
     */
    delta: object;
    /**
     * 
     * @type {Array<string>}
     * @memberof LedgerStateDeltaForTransactionGroup
     */
    ids: Array<string>;
}

/**
 * Check if a given object implements the LedgerStateDeltaForTransactionGroup interface.
 */
export function instanceOfLedgerStateDeltaForTransactionGroup(value: object): value is LedgerStateDeltaForTransactionGroup {
    if (!('delta' in value) || value['delta'] === undefined) return false;
    if (!('ids' in value) || value['ids'] === undefined) return false;
    return true;
}

export function LedgerStateDeltaForTransactionGroupFromJSON(json: any): LedgerStateDeltaForTransactionGroup {
    return LedgerStateDeltaForTransactionGroupFromJSONTyped(json, false);
}

export function LedgerStateDeltaForTransactionGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): LedgerStateDeltaForTransactionGroup {
    if (json == null) {
        return json;
    }
    return {
        
        'delta': json['Delta'],
        'ids': json['Ids'],
    };
}

export function LedgerStateDeltaForTransactionGroupToJSON(json: any): LedgerStateDeltaForTransactionGroup {
    return LedgerStateDeltaForTransactionGroupToJSONTyped(json, false);
}

export function LedgerStateDeltaForTransactionGroupToJSONTyped(value?: LedgerStateDeltaForTransactionGroup | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Delta': value['delta'],
        'Ids': value['ids'],
    };
}

