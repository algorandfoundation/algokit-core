/* tslint:disable */
/* eslint-disable */
/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SimulateTransactionResult } from './SimulateTransactionResult';
import {
    SimulateTransactionResultFromJSON,
    SimulateTransactionResultFromJSONTyped,
    SimulateTransactionResultToJSON,
    SimulateTransactionResultToJSONTyped,
} from './SimulateTransactionResult';
import type { SimulateUnnamedResourcesAccessed } from './SimulateUnnamedResourcesAccessed';
import {
    SimulateUnnamedResourcesAccessedFromJSON,
    SimulateUnnamedResourcesAccessedFromJSONTyped,
    SimulateUnnamedResourcesAccessedToJSON,
    SimulateUnnamedResourcesAccessedToJSONTyped,
} from './SimulateUnnamedResourcesAccessed';

/**
 * Simulation result for an atomic transaction group
 * @export
 * @interface SimulateTransactionGroupResult
 */
export interface SimulateTransactionGroupResult {
    /**
     * Simulation result for individual transactions
     * @type {Array<SimulateTransactionResult>}
     * @memberof SimulateTransactionGroupResult
     */
    txnResults: Array<SimulateTransactionResult>;
    /**
     * If present, indicates that the transaction group failed and specifies why that happened
     * @type {string}
     * @memberof SimulateTransactionGroupResult
     */
    failureMessage?: string;
    /**
     * If present, indicates which transaction in this group caused the failure. This array represents the path to the failing transaction. Indexes are zero based, the first element indicates the top-level transaction, and successive elements indicate deeper inner transactions.
     * @type {Array<number>}
     * @memberof SimulateTransactionGroupResult
     */
    failedAt?: Array<number>;
    /**
     * Total budget added during execution of app calls in the transaction group.
     * @type {number}
     * @memberof SimulateTransactionGroupResult
     */
    appBudgetAdded?: number;
    /**
     * Total budget consumed during execution of app calls in the transaction group.
     * @type {number}
     * @memberof SimulateTransactionGroupResult
     */
    appBudgetConsumed?: number;
    /**
     * 
     * @type {SimulateUnnamedResourcesAccessed}
     * @memberof SimulateTransactionGroupResult
     */
    unnamedResourcesAccessed?: SimulateUnnamedResourcesAccessed;
}

/**
 * Check if a given object implements the SimulateTransactionGroupResult interface.
 */
export function instanceOfSimulateTransactionGroupResult(value: object): value is SimulateTransactionGroupResult {
    if (!('txnResults' in value) || value['txnResults'] === undefined) return false;
    return true;
}

export function SimulateTransactionGroupResultFromJSON(json: any): SimulateTransactionGroupResult {
    return SimulateTransactionGroupResultFromJSONTyped(json, false);
}

export function SimulateTransactionGroupResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimulateTransactionGroupResult {
    if (json == null) {
        return json;
    }
    return {
        
        'txnResults': ((json['txn-results'] as Array<any>).map(SimulateTransactionResultFromJSON)),
        'failureMessage': json['failure-message'] == null ? undefined : json['failure-message'],
        'failedAt': json['failed-at'] == null ? undefined : json['failed-at'],
        'appBudgetAdded': json['app-budget-added'] == null ? undefined : json['app-budget-added'],
        'appBudgetConsumed': json['app-budget-consumed'] == null ? undefined : json['app-budget-consumed'],
        'unnamedResourcesAccessed': json['unnamed-resources-accessed'] == null ? undefined : SimulateUnnamedResourcesAccessedFromJSON(json['unnamed-resources-accessed']),
    };
}

export function SimulateTransactionGroupResultToJSON(json: any): SimulateTransactionGroupResult {
    return SimulateTransactionGroupResultToJSONTyped(json, false);
}

export function SimulateTransactionGroupResultToJSONTyped(value?: SimulateTransactionGroupResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'txn-results': ((value['txnResults'] as Array<any>).map(SimulateTransactionResultToJSON)),
        'failure-message': value['failureMessage'],
        'failed-at': value['failedAt'],
        'app-budget-added': value['appBudgetAdded'],
        'app-budget-consumed': value['appBudgetConsumed'],
        'unnamed-resources-accessed': SimulateUnnamedResourcesAccessedToJSON(value['unnamedResourcesAccessed']),
    };
}

