/* tslint:disable */
/* eslint-disable */
/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * An object that configures simulation execution trace.
 * @export
 * @interface SimulateTraceConfig
 */
export interface SimulateTraceConfig {
    /**
     * A boolean option for opting in execution trace features simulation endpoint.
     * @type {boolean}
     * @memberof SimulateTraceConfig
     */
    enable?: boolean;
    /**
     * A boolean option enabling returning stack changes together with execution trace during simulation.
     * @type {boolean}
     * @memberof SimulateTraceConfig
     */
    stackChange?: boolean;
    /**
     * A boolean option enabling returning scratch slot changes together with execution trace during simulation.
     * @type {boolean}
     * @memberof SimulateTraceConfig
     */
    scratchChange?: boolean;
    /**
     * A boolean option enabling returning application state changes (global, local, and box changes) with the execution trace during simulation.
     * @type {boolean}
     * @memberof SimulateTraceConfig
     */
    stateChange?: boolean;
}

/**
 * Check if a given object implements the SimulateTraceConfig interface.
 */
export function instanceOfSimulateTraceConfig(value: object): value is SimulateTraceConfig {
    return true;
}

export function SimulateTraceConfigFromJSON(json: any): SimulateTraceConfig {
    return SimulateTraceConfigFromJSONTyped(json, false);
}

export function SimulateTraceConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimulateTraceConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'enable': json['enable'] == null ? undefined : json['enable'],
        'stackChange': json['stack-change'] == null ? undefined : json['stack-change'],
        'scratchChange': json['scratch-change'] == null ? undefined : json['scratch-change'],
        'stateChange': json['state-change'] == null ? undefined : json['state-change'],
    };
}

export function SimulateTraceConfigToJSON(json: any): SimulateTraceConfig {
    return SimulateTraceConfigToJSONTyped(json, false);
}

export function SimulateTraceConfigToJSONTyped(value?: SimulateTraceConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'enable': value['enable'],
        'stack-change': value['stackChange'],
        'scratch-change': value['scratchChange'],
        'state-change': value['stateChange'],
    };
}

