/* tslint:disable */
/* eslint-disable */
/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * DryrunSource is TEAL source text that gets uploaded, compiled, and inserted into transactions or application state.
 * @export
 * @interface DryrunSource
 */
export interface DryrunSource {
    /**
     * FieldName is what kind of sources this is. If lsig then it goes into the transactions[this.TxnIndex].LogicSig. If approv or clearp it goes into the Approval Program or Clear State Program of application[this.AppIndex].
     * @type {string}
     * @memberof DryrunSource
     */
    fieldName: string;
    /**
     * 
     * @type {string}
     * @memberof DryrunSource
     */
    source: string;
    /**
     * 
     * @type {number}
     * @memberof DryrunSource
     */
    txnIndex: number;
    /**
     * 
     * @type {number}
     * @memberof DryrunSource
     */
    appIndex: number;
}

/**
 * Check if a given object implements the DryrunSource interface.
 */
export function instanceOfDryrunSource(value: object): value is DryrunSource {
    if (!('fieldName' in value) || value['fieldName'] === undefined) return false;
    if (!('source' in value) || value['source'] === undefined) return false;
    if (!('txnIndex' in value) || value['txnIndex'] === undefined) return false;
    if (!('appIndex' in value) || value['appIndex'] === undefined) return false;
    return true;
}

export function DryrunSourceFromJSON(json: any): DryrunSource {
    return DryrunSourceFromJSONTyped(json, false);
}

export function DryrunSourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): DryrunSource {
    if (json == null) {
        return json;
    }
    return {
        
        'fieldName': json['field-name'],
        'source': json['source'],
        'txnIndex': json['txn-index'],
        'appIndex': json['app-index'],
    };
}

export function DryrunSourceToJSON(json: any): DryrunSource {
    return DryrunSourceToJSONTyped(json, false);
}

export function DryrunSourceToJSONTyped(value?: DryrunSource | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'field-name': value['fieldName'],
        'source': value['source'],
        'txn-index': value['txnIndex'],
        'app-index': value['appIndex'],
    };
}

