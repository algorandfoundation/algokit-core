/* tslint:disable */
/* eslint-disable */
/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TealCompile200Response
 */
export interface TealCompile200Response {
    /**
     * base32 SHA512_256 of program bytes (Address style)
     * @type {string}
     * @memberof TealCompile200Response
     */
    hash: string;
    /**
     * base64 encoded program bytes
     * @type {string}
     * @memberof TealCompile200Response
     */
    result: string;
    /**
     * JSON of the source map
     * @type {object}
     * @memberof TealCompile200Response
     */
    sourcemap?: object;
}

/**
 * Check if a given object implements the TealCompile200Response interface.
 */
export function instanceOfTealCompile200Response(value: object): value is TealCompile200Response {
    if (!('hash' in value) || value['hash'] === undefined) return false;
    if (!('result' in value) || value['result'] === undefined) return false;
    return true;
}

export function TealCompile200ResponseFromJSON(json: any): TealCompile200Response {
    return TealCompile200ResponseFromJSONTyped(json, false);
}

export function TealCompile200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TealCompile200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'hash': json['hash'],
        'result': json['result'],
        'sourcemap': json['sourcemap'] == null ? undefined : json['sourcemap'],
    };
}

export function TealCompile200ResponseToJSON(json: any): TealCompile200Response {
    return TealCompile200ResponseToJSONTyped(json, false);
}

export function TealCompile200ResponseToJSONTyped(value?: TealCompile200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'hash': value['hash'],
        'result': value['result'],
        'sourcemap': value['sourcemap'],
    };
}

