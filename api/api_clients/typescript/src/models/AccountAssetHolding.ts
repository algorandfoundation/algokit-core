/* tslint:disable */
/* eslint-disable */
/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AssetParams } from './AssetParams';
import {
    AssetParamsFromJSON,
    AssetParamsFromJSONTyped,
    AssetParamsToJSON,
    AssetParamsToJSONTyped,
} from './AssetParams';
import type { AssetHolding } from './AssetHolding';
import {
    AssetHoldingFromJSON,
    AssetHoldingFromJSONTyped,
    AssetHoldingToJSON,
    AssetHoldingToJSONTyped,
} from './AssetHolding';

/**
 * AccountAssetHolding describes the account's asset holding and asset parameters (if either exist) for a specific asset ID.
 * @export
 * @interface AccountAssetHolding
 */
export interface AccountAssetHolding {
    /**
     * 
     * @type {AssetHolding}
     * @memberof AccountAssetHolding
     */
    assetHolding: AssetHolding;
    /**
     * 
     * @type {AssetParams}
     * @memberof AccountAssetHolding
     */
    assetParams?: AssetParams;
}

/**
 * Check if a given object implements the AccountAssetHolding interface.
 */
export function instanceOfAccountAssetHolding(value: object): value is AccountAssetHolding {
    if (!('assetHolding' in value) || value['assetHolding'] === undefined) return false;
    return true;
}

export function AccountAssetHoldingFromJSON(json: any): AccountAssetHolding {
    return AccountAssetHoldingFromJSONTyped(json, false);
}

export function AccountAssetHoldingFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountAssetHolding {
    if (json == null) {
        return json;
    }
    return {
        
        'assetHolding': AssetHoldingFromJSON(json['asset-holding']),
        'assetParams': json['asset-params'] == null ? undefined : AssetParamsFromJSON(json['asset-params']),
    };
}

export function AccountAssetHoldingToJSON(json: any): AccountAssetHolding {
    return AccountAssetHoldingToJSONTyped(json, false);
}

export function AccountAssetHoldingToJSONTyped(value?: AccountAssetHolding | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'asset-holding': AssetHoldingToJSON(value['assetHolding']),
        'asset-params': AssetParamsToJSON(value['assetParams']),
    };
}

