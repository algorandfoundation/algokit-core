/* tslint:disable */
/* eslint-disable */
/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EvalDeltaKeyValue } from './EvalDeltaKeyValue';
import {
    EvalDeltaKeyValueFromJSON,
    EvalDeltaKeyValueFromJSONTyped,
    EvalDeltaKeyValueToJSON,
    EvalDeltaKeyValueToJSONTyped,
} from './EvalDeltaKeyValue';

/**
 * Application state delta.
 * @export
 * @interface AccountStateDelta
 */
export interface AccountStateDelta {
    /**
     * 
     * @type {string}
     * @memberof AccountStateDelta
     */
    address: string;
    /**
     * Application state delta.
     * @type {Array<EvalDeltaKeyValue>}
     * @memberof AccountStateDelta
     */
    delta: Array<EvalDeltaKeyValue>;
}

/**
 * Check if a given object implements the AccountStateDelta interface.
 */
export function instanceOfAccountStateDelta(value: object): value is AccountStateDelta {
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('delta' in value) || value['delta'] === undefined) return false;
    return true;
}

export function AccountStateDeltaFromJSON(json: any): AccountStateDelta {
    return AccountStateDeltaFromJSONTyped(json, false);
}

export function AccountStateDeltaFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountStateDelta {
    if (json == null) {
        return json;
    }
    return {
        
        'address': json['address'],
        'delta': ((json['delta'] as Array<any>).map(EvalDeltaKeyValueFromJSON)),
    };
}

export function AccountStateDeltaToJSON(json: any): AccountStateDelta {
    return AccountStateDeltaToJSONTyped(json, false);
}

export function AccountStateDeltaToJSONTyped(value?: AccountStateDelta | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'address': value['address'],
        'delta': ((value['delta'] as Array<any>).map(EvalDeltaKeyValueToJSON)),
    };
}

