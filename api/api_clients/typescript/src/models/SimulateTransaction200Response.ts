/* tslint:disable */
/* eslint-disable */
/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SimulateTransactionGroupResult } from './SimulateTransactionGroupResult';
import {
    SimulateTransactionGroupResultFromJSON,
    SimulateTransactionGroupResultFromJSONTyped,
    SimulateTransactionGroupResultToJSON,
    SimulateTransactionGroupResultToJSONTyped,
} from './SimulateTransactionGroupResult';
import type { SimulationEvalOverrides } from './SimulationEvalOverrides';
import {
    SimulationEvalOverridesFromJSON,
    SimulationEvalOverridesFromJSONTyped,
    SimulationEvalOverridesToJSON,
    SimulationEvalOverridesToJSONTyped,
} from './SimulationEvalOverrides';
import type { SimulateInitialStates } from './SimulateInitialStates';
import {
    SimulateInitialStatesFromJSON,
    SimulateInitialStatesFromJSONTyped,
    SimulateInitialStatesToJSON,
    SimulateInitialStatesToJSONTyped,
} from './SimulateInitialStates';
import type { SimulateTraceConfig } from './SimulateTraceConfig';
import {
    SimulateTraceConfigFromJSON,
    SimulateTraceConfigFromJSONTyped,
    SimulateTraceConfigToJSON,
    SimulateTraceConfigToJSONTyped,
} from './SimulateTraceConfig';

/**
 * 
 * @export
 * @interface SimulateTransaction200Response
 */
export interface SimulateTransaction200Response {
    /**
     * The version of this response object.
     * @type {number}
     * @memberof SimulateTransaction200Response
     */
    version: number;
    /**
     * The round immediately preceding this simulation. State changes through this round were used to run this simulation.
     * @type {number}
     * @memberof SimulateTransaction200Response
     */
    lastRound: number;
    /**
     * A result object for each transaction group that was simulated.
     * @type {Array<SimulateTransactionGroupResult>}
     * @memberof SimulateTransaction200Response
     */
    txnGroups: Array<SimulateTransactionGroupResult>;
    /**
     * 
     * @type {SimulationEvalOverrides}
     * @memberof SimulateTransaction200Response
     */
    evalOverrides?: SimulationEvalOverrides;
    /**
     * 
     * @type {SimulateTraceConfig}
     * @memberof SimulateTransaction200Response
     */
    execTraceConfig?: SimulateTraceConfig;
    /**
     * 
     * @type {SimulateInitialStates}
     * @memberof SimulateTransaction200Response
     */
    initialStates?: SimulateInitialStates;
}

/**
 * Check if a given object implements the SimulateTransaction200Response interface.
 */
export function instanceOfSimulateTransaction200Response(value: object): value is SimulateTransaction200Response {
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('lastRound' in value) || value['lastRound'] === undefined) return false;
    if (!('txnGroups' in value) || value['txnGroups'] === undefined) return false;
    return true;
}

export function SimulateTransaction200ResponseFromJSON(json: any): SimulateTransaction200Response {
    return SimulateTransaction200ResponseFromJSONTyped(json, false);
}

export function SimulateTransaction200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimulateTransaction200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'version': json['version'],
        'lastRound': json['last-round'],
        'txnGroups': ((json['txn-groups'] as Array<any>).map(SimulateTransactionGroupResultFromJSON)),
        'evalOverrides': json['eval-overrides'] == null ? undefined : SimulationEvalOverridesFromJSON(json['eval-overrides']),
        'execTraceConfig': json['exec-trace-config'] == null ? undefined : SimulateTraceConfigFromJSON(json['exec-trace-config']),
        'initialStates': json['initial-states'] == null ? undefined : SimulateInitialStatesFromJSON(json['initial-states']),
    };
}

export function SimulateTransaction200ResponseToJSON(json: any): SimulateTransaction200Response {
    return SimulateTransaction200ResponseToJSONTyped(json, false);
}

export function SimulateTransaction200ResponseToJSONTyped(value?: SimulateTransaction200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'version': value['version'],
        'last-round': value['lastRound'],
        'txn-groups': ((value['txnGroups'] as Array<any>).map(SimulateTransactionGroupResultToJSON)),
        'eval-overrides': SimulationEvalOverridesToJSON(value['evalOverrides']),
        'exec-trace-config': SimulateTraceConfigToJSON(value['execTraceConfig']),
        'initial-states': SimulateInitialStatesToJSON(value['initialStates']),
    };
}

