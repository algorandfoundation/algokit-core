/* tslint:disable */
/* eslint-disable */
/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PendingTransactionResponse } from './PendingTransactionResponse';
import {
    PendingTransactionResponseFromJSON,
    PendingTransactionResponseFromJSONTyped,
    PendingTransactionResponseToJSON,
    PendingTransactionResponseToJSONTyped,
} from './PendingTransactionResponse';
import type { SimulationTransactionExecTrace } from './SimulationTransactionExecTrace';
import {
    SimulationTransactionExecTraceFromJSON,
    SimulationTransactionExecTraceFromJSONTyped,
    SimulationTransactionExecTraceToJSON,
    SimulationTransactionExecTraceToJSONTyped,
} from './SimulationTransactionExecTrace';
import type { SimulateUnnamedResourcesAccessed } from './SimulateUnnamedResourcesAccessed';
import {
    SimulateUnnamedResourcesAccessedFromJSON,
    SimulateUnnamedResourcesAccessedFromJSONTyped,
    SimulateUnnamedResourcesAccessedToJSON,
    SimulateUnnamedResourcesAccessedToJSONTyped,
} from './SimulateUnnamedResourcesAccessed';

/**
 * Simulation result for an individual transaction
 * @export
 * @interface SimulateTransactionResult
 */
export interface SimulateTransactionResult {
    /**
     * 
     * @type {PendingTransactionResponse}
     * @memberof SimulateTransactionResult
     */
    txnResult: PendingTransactionResponse;
    /**
     * Budget used during execution of an app call transaction. This value includes budged used by inner app calls spawned by this transaction.
     * @type {number}
     * @memberof SimulateTransactionResult
     */
    appBudgetConsumed?: number;
    /**
     * Budget used during execution of a logic sig transaction.
     * @type {number}
     * @memberof SimulateTransactionResult
     */
    logicSigBudgetConsumed?: number;
    /**
     * 
     * @type {SimulationTransactionExecTrace}
     * @memberof SimulateTransactionResult
     */
    execTrace?: SimulationTransactionExecTrace;
    /**
     * 
     * @type {SimulateUnnamedResourcesAccessed}
     * @memberof SimulateTransactionResult
     */
    unnamedResourcesAccessed?: SimulateUnnamedResourcesAccessed;
    /**
     * The account that needed to sign this transaction when no signature was provided and the provided signer was incorrect.
     * @type {string}
     * @memberof SimulateTransactionResult
     */
    fixedSigner?: string;
}

/**
 * Check if a given object implements the SimulateTransactionResult interface.
 */
export function instanceOfSimulateTransactionResult(value: object): value is SimulateTransactionResult {
    if (!('txnResult' in value) || value['txnResult'] === undefined) return false;
    return true;
}

export function SimulateTransactionResultFromJSON(json: any): SimulateTransactionResult {
    return SimulateTransactionResultFromJSONTyped(json, false);
}

export function SimulateTransactionResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimulateTransactionResult {
    if (json == null) {
        return json;
    }
    return {
        
        'txnResult': PendingTransactionResponseFromJSON(json['txn-result']),
        'appBudgetConsumed': json['app-budget-consumed'] == null ? undefined : json['app-budget-consumed'],
        'logicSigBudgetConsumed': json['logic-sig-budget-consumed'] == null ? undefined : json['logic-sig-budget-consumed'],
        'execTrace': json['exec-trace'] == null ? undefined : SimulationTransactionExecTraceFromJSON(json['exec-trace']),
        'unnamedResourcesAccessed': json['unnamed-resources-accessed'] == null ? undefined : SimulateUnnamedResourcesAccessedFromJSON(json['unnamed-resources-accessed']),
        'fixedSigner': json['fixed-signer'] == null ? undefined : json['fixed-signer'],
    };
}

export function SimulateTransactionResultToJSON(json: any): SimulateTransactionResult {
    return SimulateTransactionResultToJSONTyped(json, false);
}

export function SimulateTransactionResultToJSONTyped(value?: SimulateTransactionResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'txn-result': PendingTransactionResponseToJSON(value['txnResult']),
        'app-budget-consumed': value['appBudgetConsumed'],
        'logic-sig-budget-consumed': value['logicSigBudgetConsumed'],
        'exec-trace': SimulationTransactionExecTraceToJSON(value['execTrace']),
        'unnamed-resources-accessed': SimulateUnnamedResourcesAccessedToJSON(value['unnamedResourcesAccessed']),
        'fixed-signer': value['fixedSigner'],
    };
}

