/* tslint:disable */
/* eslint-disable */
/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AvmValue } from './AvmValue';
import {
    AvmValueFromJSON,
    AvmValueFromJSONTyped,
    AvmValueToJSON,
    AvmValueToJSONTyped,
} from './AvmValue';

/**
 * A write operation into a scratch slot.
 * @export
 * @interface ScratchChange
 */
export interface ScratchChange {
    /**
     * The scratch slot written.
     * @type {number}
     * @memberof ScratchChange
     */
    slot: number;
    /**
     * 
     * @type {AvmValue}
     * @memberof ScratchChange
     */
    newValue: AvmValue;
}

/**
 * Check if a given object implements the ScratchChange interface.
 */
export function instanceOfScratchChange(value: object): value is ScratchChange {
    if (!('slot' in value) || value['slot'] === undefined) return false;
    if (!('newValue' in value) || value['newValue'] === undefined) return false;
    return true;
}

export function ScratchChangeFromJSON(json: any): ScratchChange {
    return ScratchChangeFromJSONTyped(json, false);
}

export function ScratchChangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScratchChange {
    if (json == null) {
        return json;
    }
    return {
        
        'slot': json['slot'],
        'newValue': AvmValueFromJSON(json['new-value']),
    };
}

export function ScratchChangeToJSON(json: any): ScratchChange {
    return ScratchChangeToJSONTyped(json, false);
}

export function ScratchChangeToJSONTyped(value?: ScratchChange | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'slot': value['slot'],
        'new-value': AvmValueToJSON(value['newValue']),
    };
}

