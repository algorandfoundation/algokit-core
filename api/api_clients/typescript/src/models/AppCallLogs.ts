/* tslint:disable */
/* eslint-disable */
/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The logged messages from an app call along with the app ID and outer transaction ID. Logs appear in the same order that they were emitted.
 * @export
 * @interface AppCallLogs
 */
export interface AppCallLogs {
    /**
     * An array of logs
     * @type {Array<string>}
     * @memberof AppCallLogs
     */
    logs: Array<string>;
    /**
     * The application from which the logs were generated
     * @type {number}
     * @memberof AppCallLogs
     */
    applicationIndex: number;
    /**
     * The transaction ID of the outer app call that lead to these logs
     * @type {string}
     * @memberof AppCallLogs
     */
    txId: string;
}

/**
 * Check if a given object implements the AppCallLogs interface.
 */
export function instanceOfAppCallLogs(value: object): value is AppCallLogs {
    if (!('logs' in value) || value['logs'] === undefined) return false;
    if (!('applicationIndex' in value) || value['applicationIndex'] === undefined) return false;
    if (!('txId' in value) || value['txId'] === undefined) return false;
    return true;
}

export function AppCallLogsFromJSON(json: any): AppCallLogs {
    return AppCallLogsFromJSONTyped(json, false);
}

export function AppCallLogsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppCallLogs {
    if (json == null) {
        return json;
    }
    return {
        
        'logs': json['logs'],
        'applicationIndex': json['application-index'],
        'txId': json['txId'],
    };
}

export function AppCallLogsToJSON(json: any): AppCallLogs {
    return AppCallLogsToJSONTyped(json, false);
}

export function AppCallLogsToJSONTyped(value?: AppCallLogs | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'logs': value['logs'],
        'application-index': value['applicationIndex'],
        'txId': value['txId'],
    };
}

