/* tslint:disable */
/* eslint-disable */
/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The set of parameters and limits override during simulation. If this set of parameters is present, then evaluation parameters may differ from standard evaluation in certain ways.
 * @export
 * @interface SimulationEvalOverrides
 */
export interface SimulationEvalOverrides {
    /**
     * If true, transactions without signatures are allowed and simulated as if they were properly signed.
     * @type {boolean}
     * @memberof SimulationEvalOverrides
     */
    allowEmptySignatures?: boolean;
    /**
     * If true, allows access to unnamed resources during simulation.
     * @type {boolean}
     * @memberof SimulationEvalOverrides
     */
    allowUnnamedResources?: boolean;
    /**
     * The maximum log calls one can make during simulation
     * @type {number}
     * @memberof SimulationEvalOverrides
     */
    maxLogCalls?: number;
    /**
     * The maximum byte number to log during simulation
     * @type {number}
     * @memberof SimulationEvalOverrides
     */
    maxLogSize?: number;
    /**
     * The extra opcode budget added to each transaction group during simulation
     * @type {number}
     * @memberof SimulationEvalOverrides
     */
    extraOpcodeBudget?: number;
    /**
     * If true, signers for transactions that are missing signatures will be fixed during evaluation.
     * @type {boolean}
     * @memberof SimulationEvalOverrides
     */
    fixSigners?: boolean;
}

/**
 * Check if a given object implements the SimulationEvalOverrides interface.
 */
export function instanceOfSimulationEvalOverrides(value: object): value is SimulationEvalOverrides {
    return true;
}

export function SimulationEvalOverridesFromJSON(json: any): SimulationEvalOverrides {
    return SimulationEvalOverridesFromJSONTyped(json, false);
}

export function SimulationEvalOverridesFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimulationEvalOverrides {
    if (json == null) {
        return json;
    }
    return {
        
        'allowEmptySignatures': json['allow-empty-signatures'] == null ? undefined : json['allow-empty-signatures'],
        'allowUnnamedResources': json['allow-unnamed-resources'] == null ? undefined : json['allow-unnamed-resources'],
        'maxLogCalls': json['max-log-calls'] == null ? undefined : json['max-log-calls'],
        'maxLogSize': json['max-log-size'] == null ? undefined : json['max-log-size'],
        'extraOpcodeBudget': json['extra-opcode-budget'] == null ? undefined : json['extra-opcode-budget'],
        'fixSigners': json['fix-signers'] == null ? undefined : json['fix-signers'],
    };
}

export function SimulationEvalOverridesToJSON(json: any): SimulationEvalOverrides {
    return SimulationEvalOverridesToJSONTyped(json, false);
}

export function SimulationEvalOverridesToJSONTyped(value?: SimulationEvalOverrides | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'allow-empty-signatures': value['allowEmptySignatures'],
        'allow-unnamed-resources': value['allowUnnamedResources'],
        'max-log-calls': value['maxLogCalls'],
        'max-log-size': value['maxLogSize'],
        'extra-opcode-budget': value['extraOpcodeBudget'],
        'fix-signers': value['fixSigners'],
    };
}

