/* tslint:disable */
/* eslint-disable */
/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BuildVersion
 */
export interface BuildVersion {
    /**
     * 
     * @type {string}
     * @memberof BuildVersion
     */
    branch: string;
    /**
     * 
     * @type {number}
     * @memberof BuildVersion
     */
    buildNumber: number;
    /**
     * 
     * @type {string}
     * @memberof BuildVersion
     */
    channel: string;
    /**
     * 
     * @type {string}
     * @memberof BuildVersion
     */
    commitHash: string;
    /**
     * 
     * @type {number}
     * @memberof BuildVersion
     */
    major: number;
    /**
     * 
     * @type {number}
     * @memberof BuildVersion
     */
    minor: number;
}

/**
 * Check if a given object implements the BuildVersion interface.
 */
export function instanceOfBuildVersion(value: object): value is BuildVersion {
    if (!('branch' in value) || value['branch'] === undefined) return false;
    if (!('buildNumber' in value) || value['buildNumber'] === undefined) return false;
    if (!('channel' in value) || value['channel'] === undefined) return false;
    if (!('commitHash' in value) || value['commitHash'] === undefined) return false;
    if (!('major' in value) || value['major'] === undefined) return false;
    if (!('minor' in value) || value['minor'] === undefined) return false;
    return true;
}

export function BuildVersionFromJSON(json: any): BuildVersion {
    return BuildVersionFromJSONTyped(json, false);
}

export function BuildVersionFromJSONTyped(json: any, ignoreDiscriminator: boolean): BuildVersion {
    if (json == null) {
        return json;
    }
    return {
        
        'branch': json['branch'],
        'buildNumber': json['build_number'],
        'channel': json['channel'],
        'commitHash': json['commit_hash'],
        'major': json['major'],
        'minor': json['minor'],
    };
}

export function BuildVersionToJSON(json: any): BuildVersion {
    return BuildVersionToJSONTyped(json, false);
}

export function BuildVersionToJSONTyped(value?: BuildVersion | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'branch': value['branch'],
        'build_number': value['buildNumber'],
        'channel': value['channel'],
        'commit_hash': value['commitHash'],
        'major': value['major'],
        'minor': value['minor'],
    };
}

