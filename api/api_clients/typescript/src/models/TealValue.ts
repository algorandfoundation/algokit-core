/* tslint:disable */
/* eslint-disable */
/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Represents a TEAL value.
 * @export
 * @interface TealValue
 */
export interface TealValue {
    /**
     * \[tt\] value type. Value `1` refers to **bytes**, value `2` refers to **uint**
     * @type {number}
     * @memberof TealValue
     */
    type: number;
    /**
     * \[tb\] bytes value.
     * @type {string}
     * @memberof TealValue
     */
    bytes: string;
    /**
     * \[ui\] uint value.
     * @type {number}
     * @memberof TealValue
     */
    uint: number;
}

/**
 * Check if a given object implements the TealValue interface.
 */
export function instanceOfTealValue(value: object): value is TealValue {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('bytes' in value) || value['bytes'] === undefined) return false;
    if (!('uint' in value) || value['uint'] === undefined) return false;
    return true;
}

export function TealValueFromJSON(json: any): TealValue {
    return TealValueFromJSONTyped(json, false);
}

export function TealValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): TealValue {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'bytes': json['bytes'],
        'uint': json['uint'],
    };
}

export function TealValueToJSON(json: any): TealValue {
    return TealValueToJSONTyped(json, false);
}

export function TealValueToJSONTyped(value?: TealValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'bytes': value['bytes'],
        'uint': value['uint'],
    };
}

