/* tslint:disable */
/* eslint-disable */
/**
 * Algod REST API.
 * API endpoint for algod operations.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@algorand.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DryrunTxnResult } from './DryrunTxnResult';
import {
    DryrunTxnResultFromJSON,
    DryrunTxnResultFromJSONTyped,
    DryrunTxnResultToJSON,
    DryrunTxnResultToJSONTyped,
} from './DryrunTxnResult';

/**
 * 
 * @export
 * @interface TealDryrun200Response
 */
export interface TealDryrun200Response {
    /**
     * 
     * @type {Array<DryrunTxnResult>}
     * @memberof TealDryrun200Response
     */
    txns: Array<DryrunTxnResult>;
    /**
     * 
     * @type {string}
     * @memberof TealDryrun200Response
     */
    error: string;
    /**
     * Protocol version is the protocol version Dryrun was operated under.
     * @type {string}
     * @memberof TealDryrun200Response
     */
    protocolVersion: string;
}

/**
 * Check if a given object implements the TealDryrun200Response interface.
 */
export function instanceOfTealDryrun200Response(value: object): value is TealDryrun200Response {
    if (!('txns' in value) || value['txns'] === undefined) return false;
    if (!('error' in value) || value['error'] === undefined) return false;
    if (!('protocolVersion' in value) || value['protocolVersion'] === undefined) return false;
    return true;
}

export function TealDryrun200ResponseFromJSON(json: any): TealDryrun200Response {
    return TealDryrun200ResponseFromJSONTyped(json, false);
}

export function TealDryrun200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TealDryrun200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'txns': ((json['txns'] as Array<any>).map(DryrunTxnResultFromJSON)),
        'error': json['error'],
        'protocolVersion': json['protocol-version'],
    };
}

export function TealDryrun200ResponseToJSON(json: any): TealDryrun200Response {
    return TealDryrun200ResponseToJSONTyped(json, false);
}

export function TealDryrun200ResponseToJSONTyped(value?: TealDryrun200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'txns': ((value['txns'] as Array<any>).map(DryrunTxnResultToJSON)),
        'error': value['error'],
        'protocol-version': value['protocolVersion'],
    };
}

