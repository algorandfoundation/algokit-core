/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[cfg(feature = "ffi_wasm")]
use wasm_bindgen::prelude::wasm_bindgen;




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_wasm", derive(tsify_next::Tsify))]
#[cfg_attr(feature = "ffi_wasm", tsify(into_wasm_abi, from_wasm_abi))]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct GetTransactionGroupLedgerStateDeltasForRound200Response {
    #[serde(rename = "Deltas")]
    
    
    
    pub deltas: Vec<models::LedgerStateDeltaForTransactionGroup>,
}

impl GetTransactionGroupLedgerStateDeltasForRound200Response {
    #[cfg_attr(feature = "ffi_uniffi", uniffi::constructor)]
    pub fn new(
        deltas: Vec<models::LedgerStateDeltaForTransactionGroup>,
    ) -> GetTransactionGroupLedgerStateDeltasForRound200Response {
        GetTransactionGroupLedgerStateDeltasForRound200Response {
            deltas: deltas,
        }
    }
}



impl crate::JsonSerializable for GetTransactionGroupLedgerStateDeltasForRound200Response {}

impl crate::MsgpackDecodable for GetTransactionGroupLedgerStateDeltasForRound200Response {}

crate::auto_impl_json_ffi!(GetTransactionGroupLedgerStateDeltasForRound200Response, get_transaction_group_ledger_state_deltas_for_round200_response);

