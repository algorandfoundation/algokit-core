/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AppCallLogs : The logged messages from an app call along with the app ID and outer transaction ID. Logs appear in the same order that they were emitted.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_wasm", derive(tsify_next::Tsify))]
#[cfg_attr(feature = "ffi_wasm", tsify(into_wasm_abi, from_wasm_abi))]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct AppCallLogs {
    /// An array of logs
    #[serde(rename = "logs")]
    
    
    
    pub logs: Vec<String>,
    /// The application from which the logs were generated
    #[serde(rename = "application-index")]
    
    
    
    pub application_index: i32,
    /// The transaction ID of the outer app call that lead to these logs
    #[serde(rename = "txId")]
    
    
    
    pub tx_id: String,
}

impl AppCallLogs {
    /// The logged messages from an app call along with the app ID and outer transaction ID. Logs appear in the same order that they were emitted.
    pub fn new(logs: Vec<String>, application_index: i32, tx_id: String) -> AppCallLogs {
        AppCallLogs {
            logs,
            application_index,
            tx_id,
        }
    }
}

impl crate::JsonSerializable for AppCallLogs {}


