/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[cfg(feature = "ffi_wasm")]
use wasm_bindgen::prelude::wasm_bindgen;

/// EvalDelta : Represents a TEAL value delta.



#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_wasm", derive(tsify_next::Tsify))]
#[cfg_attr(feature = "ffi_wasm", tsify(into_wasm_abi, from_wasm_abi))]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct EvalDelta {
    /// \\[at\\] delta action.
    #[serde(rename = "action")]
    
    
    
    pub action: i32,
    /// \\[bs\\] bytes value.
    #[serde(rename = "bytes", skip_serializing_if = "Option::is_none")]
    
    #[cfg_attr(feature = "ffi_wasm", tsify(optional))]
    #[cfg_attr(feature = "ffi_uniffi", uniffi(default = None))]
    pub bytes: Option<String>,
    /// \\[ui\\] uint value.
    #[serde(rename = "uint", skip_serializing_if = "Option::is_none")]
    
    #[cfg_attr(feature = "ffi_wasm", tsify(optional))]
    #[cfg_attr(feature = "ffi_uniffi", uniffi(default = None))]
    pub uint: Option<i32>,
}

impl EvalDelta {
    /// Represents a TEAL value delta.
    #[cfg_attr(feature = "ffi_uniffi", uniffi::constructor)]
    pub fn new(
        action: i32, bytes: Option<String>, uint: Option<i32>
    ) -> EvalDelta {
        EvalDelta {
            action: action,
            bytes: bytes,
            uint: uint,
        }
    }
}



impl crate::JsonSerializable for EvalDelta {}

impl crate::MsgpackDecodable for EvalDelta {}

crate::auto_impl_json_ffi!(EvalDelta, eval_delta);

