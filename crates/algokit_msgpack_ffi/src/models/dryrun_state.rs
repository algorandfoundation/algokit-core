/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[cfg(feature = "ffi_wasm")]
use wasm_bindgen::prelude::wasm_bindgen;

/// DryrunState : Stores the TEAL eval step data



#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_wasm", derive(tsify_next::Tsify))]
#[cfg_attr(feature = "ffi_wasm", tsify(into_wasm_abi, from_wasm_abi))]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct DryrunState {
    /// Line number
    #[serde(rename = "line")]
    
    
    
    pub line: i32,
    /// Program counter
    #[serde(rename = "pc")]
    
    
    
    pub pc: i32,
    #[serde(rename = "stack")]
    
    
    
    pub stack: Vec<models::TealValue>,
    #[serde(rename = "scratch", skip_serializing_if = "Option::is_none")]
    
    #[cfg_attr(feature = "ffi_wasm", tsify(optional))]
    #[cfg_attr(feature = "ffi_uniffi", uniffi(default = None))]
    pub scratch: Option<Vec<models::TealValue>>,
    /// Evaluation error if any
    #[serde(rename = "error", skip_serializing_if = "Option::is_none")]
    
    #[cfg_attr(feature = "ffi_wasm", tsify(optional))]
    #[cfg_attr(feature = "ffi_uniffi", uniffi(default = None))]
    pub error: Option<String>,
}

impl DryrunState {
    /// Stores the TEAL eval step data
    #[cfg_attr(feature = "ffi_uniffi", uniffi::constructor)]
    pub fn new(
        line: i32,pc: i32,stack: Vec<models::TealValue>, scratch: Option<Vec<models::TealValue>>, error: Option<String>
    ) -> DryrunState {
        DryrunState {
            line: line,
            pc: pc,
            stack: stack,
            scratch: scratch,
            error: error,
        }
    }
}



impl crate::JsonSerializable for DryrunState {}


crate::auto_impl_json_ffi!(DryrunState, dryrun_state);

