/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[cfg(feature = "ffi_wasm")]
use wasm_bindgen::prelude::wasm_bindgen;

/// GetPendingTransactionsByAddress200Response : PendingTransactions is an array of signed transactions exactly as they were submitted.



#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_wasm", derive(tsify_next::Tsify))]
#[cfg_attr(feature = "ffi_wasm", tsify(into_wasm_abi, from_wasm_abi))]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct GetPendingTransactionsByAddress200Response {
    /// An array of signed transaction objects.
    #[serde(rename = "top-transactions")]
    
    
    
    pub top_transactions: Vec<String>,
    /// Total number of transactions in the pool.
    #[serde(rename = "total-transactions")]
    
    
    
    pub total_transactions: i32,
}

impl GetPendingTransactionsByAddress200Response {
    /// PendingTransactions is an array of signed transactions exactly as they were submitted.
    #[cfg_attr(feature = "ffi_uniffi", uniffi::constructor)]
    pub fn new(
        top_transactions: Vec<String>,total_transactions: i32,
    ) -> GetPendingTransactionsByAddress200Response {
        GetPendingTransactionsByAddress200Response {
            top_transactions: top_transactions,
            total_transactions: total_transactions,
        }
    }
}



impl crate::JsonSerializable for GetPendingTransactionsByAddress200Response {}

impl crate::MsgpackDecodable for GetPendingTransactionsByAddress200Response {}

crate::auto_impl_json_ffi!(GetPendingTransactionsByAddress200Response, get_pending_transactions_by_address200_response);

