/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SimulateTraceConfig : An object that configures simulation execution trace.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_wasm", derive(tsify_next::Tsify))]
#[cfg_attr(feature = "ffi_wasm", tsify(into_wasm_abi, from_wasm_abi))]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct SimulateTraceConfig {
    /// A boolean option for opting in execution trace features simulation endpoint.
    #[serde(rename = "enable", skip_serializing_if = "Option::is_none")]
    
    #[cfg_attr(feature = "ffi_wasm", tsify(optional))]
    #[cfg_attr(feature = "ffi_uniffi", uniffi(default = None))]
    pub enable: Option<bool>,
    /// A boolean option enabling returning stack changes together with execution trace during simulation.
    #[serde(rename = "stack-change", skip_serializing_if = "Option::is_none")]
    
    #[cfg_attr(feature = "ffi_wasm", tsify(optional))]
    #[cfg_attr(feature = "ffi_uniffi", uniffi(default = None))]
    pub stack_change: Option<bool>,
    /// A boolean option enabling returning scratch slot changes together with execution trace during simulation.
    #[serde(rename = "scratch-change", skip_serializing_if = "Option::is_none")]
    
    #[cfg_attr(feature = "ffi_wasm", tsify(optional))]
    #[cfg_attr(feature = "ffi_uniffi", uniffi(default = None))]
    pub scratch_change: Option<bool>,
    /// A boolean option enabling returning application state changes (global, local, and box changes) with the execution trace during simulation.
    #[serde(rename = "state-change", skip_serializing_if = "Option::is_none")]
    
    #[cfg_attr(feature = "ffi_wasm", tsify(optional))]
    #[cfg_attr(feature = "ffi_uniffi", uniffi(default = None))]
    pub state_change: Option<bool>,
}

impl SimulateTraceConfig {
    /// An object that configures simulation execution trace.
    #[cfg_attr(feature = "ffi_uniffi", uniffi::constructor)]
    #[cfg_attr(feature = "ffi_wasm", wasm_bindgen(constructor))]
    pub fn new(
         enable: Option<bool>, stack_change: Option<bool>, scratch_change: Option<bool>, state_change: Option<bool>
    ) -> SimulateTraceConfig {
        SimulateTraceConfig {
            enable: enable,
            stack_change: stack_change,
            scratch_change: scratch_change,
            state_change: state_change,
        }
    }
}

impl crate::JsonSerializable for SimulateTraceConfig {}

impl crate::MsgpackEncodable for SimulateTraceConfig {}
impl crate::MsgpackDecodable for SimulateTraceConfig {}

