/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[cfg(feature = "ffi_wasm")]
use wasm_bindgen::prelude::wasm_bindgen;

/// TealValue : Represents a TEAL value.



#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_wasm", derive(tsify_next::Tsify))]
#[cfg_attr(feature = "ffi_wasm", tsify(into_wasm_abi, from_wasm_abi))]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct TealValue {
    /// \\[tt\\] value type. Value `1` refers to **bytes**, value `2` refers to **uint**
    #[serde(rename = "type")]
    
    
    
    pub r#type: i32,
    /// \\[tb\\] bytes value.
    #[serde(rename = "bytes")]
    
    
    
    pub bytes: String,
    /// \\[ui\\] uint value.
    #[serde(rename = "uint")]
    
    
    
    pub uint: i32,
}

impl TealValue {
    /// Represents a TEAL value.
    #[cfg_attr(feature = "ffi_uniffi", uniffi::constructor)]
    pub fn new(
        r#type: i32,bytes: String,uint: i32,
    ) -> TealValue {
        TealValue {
            r#type: r#type,
            bytes: bytes,
            uint: uint,
        }
    }
}



impl crate::JsonSerializable for TealValue {}

impl crate::MsgpackEncodable for TealValue {}
impl crate::MsgpackDecodable for TealValue {}

crate::auto_impl_json_ffi!(TealValue, teal_value);

