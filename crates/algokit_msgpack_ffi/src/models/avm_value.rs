/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AvmValue : Represents an AVM value.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_wasm", derive(tsify_next::Tsify))]
#[cfg_attr(feature = "ffi_wasm", tsify(into_wasm_abi, from_wasm_abi))]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct AvmValue {
    /// value type. Value `1` refers to **bytes**, value `2` refers to **uint64**
    #[serde(rename = "type")]
    
    
    
    pub r#type: i32,
    /// bytes value.
    #[serde(rename = "bytes", skip_serializing_if = "Option::is_none")]
    
    #[cfg_attr(feature = "ffi_wasm", tsify(optional))]
    #[cfg_attr(feature = "ffi_uniffi", uniffi(default = None))]
    pub bytes: Option<String>,
    /// uint value.
    #[serde(rename = "uint", skip_serializing_if = "Option::is_none")]
    
    #[cfg_attr(feature = "ffi_wasm", tsify(optional))]
    #[cfg_attr(feature = "ffi_uniffi", uniffi(default = None))]
    pub uint: Option<i32>,
}

impl AvmValue {
    /// Represents an AVM value.
    #[cfg_attr(feature = "ffi_uniffi", uniffi::constructor)]
    #[cfg_attr(feature = "ffi_wasm", wasm_bindgen(constructor))]
    pub fn new(
        r#type: i32, bytes: Option<String>, uint: Option<i32>
    ) -> AvmValue {
        AvmValue {
            r#type: r#type,
            bytes: bytes,
            uint: uint,
        }
    }
}

impl crate::JsonSerializable for AvmValue {}

impl crate::MsgpackDecodable for AvmValue {}

