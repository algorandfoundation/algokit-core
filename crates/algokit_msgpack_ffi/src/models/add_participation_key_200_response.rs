/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_wasm", derive(tsify_next::Tsify))]
#[cfg_attr(feature = "ffi_wasm", tsify(into_wasm_abi, from_wasm_abi))]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct AddParticipationKey200Response {
    /// encoding of the participation ID.
    #[serde(rename = "partId")]
    
    
    
    pub part_id: String,
}

impl AddParticipationKey200Response {
    pub fn new(part_id: String) -> AddParticipationKey200Response {
        AddParticipationKey200Response {
            part_id,
        }
    }
}

impl crate::JsonSerializable for AddParticipationKey200Response {}


