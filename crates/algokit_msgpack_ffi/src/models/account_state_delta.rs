/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[cfg(feature = "ffi_wasm")]
use wasm_bindgen::prelude::wasm_bindgen;

/// AccountStateDelta : Application state delta.



#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_wasm", derive(tsify_next::Tsify))]
#[cfg_attr(feature = "ffi_wasm", tsify(into_wasm_abi, from_wasm_abi))]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct AccountStateDelta {
    #[serde(rename = "address")]
    
    
    
    pub address: String,
    /// Application state delta.
    #[serde(rename = "delta")]
    
    
    
    pub delta: Vec<models::EvalDeltaKeyValue>,
}

impl AccountStateDelta {
    /// Application state delta.
    #[cfg_attr(feature = "ffi_uniffi", uniffi::constructor)]
    pub fn new(
        address: String,delta: Vec<models::EvalDeltaKeyValue>,
    ) -> AccountStateDelta {
        AccountStateDelta {
            address: address,
            delta: delta,
        }
    }
}



impl crate::JsonSerializable for AccountStateDelta {}

impl crate::MsgpackDecodable for AccountStateDelta {}

crate::auto_impl_json_ffi!(AccountStateDelta, account_state_delta);

