/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

use serde_with::serde_as;

#[cfg(feature = "ffi_wasm")]
use wasm_bindgen::prelude::wasm_bindgen;

/// AvmKeyValue : Represents an AVM key-value pair in an application store.



#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_wasm", derive(tsify_next::Tsify))]
#[cfg_attr(feature = "ffi_wasm", tsify(into_wasm_abi, from_wasm_abi))]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct AvmKeyValue {
    #[serde_as(as = "serde_with::base64::Base64")]
    #[serde(rename = "key")]
    
    
    
    pub key: Vec<u8>,
    #[serde(rename = "value")]
    
    
    
    pub value: models::AvmValue,
}

impl AvmKeyValue {
    /// Represents an AVM key-value pair in an application store.
    #[cfg_attr(feature = "ffi_uniffi", uniffi::constructor)]
    pub fn new(
        key: Vec<u8>,value: models::AvmValue,
    ) -> AvmKeyValue {
        AvmKeyValue {
            key: key,
            value: value,
        }
    }
}



impl crate::JsonSerializable for AvmKeyValue {}

impl crate::MsgpackDecodable for AvmKeyValue {}

crate::auto_impl_json_ffi!(AvmKeyValue, avm_key_value);

