/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Asset : Specifies both the unique identifier and the parameters for an asset
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_wasm", derive(tsify_next::Tsify))]
#[cfg_attr(feature = "ffi_wasm", tsify(into_wasm_abi, from_wasm_abi))]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct Asset {
    /// unique asset identifier
    #[serde(rename = "index")]
    
    
    
    pub index: i32,
    #[serde(rename = "params")]
    
    
    
    pub params: models::AssetParams,
}

impl Asset {
    /// Specifies both the unique identifier and the parameters for an asset
    #[cfg_attr(feature = "ffi_uniffi", uniffi::constructor)]
    #[cfg_attr(feature = "ffi_wasm", wasm_bindgen(constructor))]
    pub fn new(
        index: i32,params: models::AssetParams,
    ) -> Asset {
        Asset {
            index: index,
            params: params,
        }
    }
}

impl crate::JsonSerializable for Asset {}

impl crate::MsgpackEncodable for Asset {}
impl crate::MsgpackDecodable for Asset {}

