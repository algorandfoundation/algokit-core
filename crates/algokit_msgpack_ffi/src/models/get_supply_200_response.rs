/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[cfg(feature = "ffi_wasm")]
use wasm_bindgen::prelude::wasm_bindgen;

/// GetSupply200Response : Supply represents the current supply of MicroAlgos in the system



#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_wasm", derive(tsify_next::Tsify))]
#[cfg_attr(feature = "ffi_wasm", tsify(into_wasm_abi, from_wasm_abi))]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct GetSupply200Response {
    /// Round
    #[serde(rename = "current_round")]
    
    
    
    pub current_round: i32,
    /// OnlineMoney
    #[serde(rename = "online-money")]
    
    
    
    pub online_money: i32,
    /// TotalMoney
    #[serde(rename = "total-money")]
    
    
    
    pub total_money: i32,
}

impl GetSupply200Response {
    /// Supply represents the current supply of MicroAlgos in the system
    #[cfg_attr(feature = "ffi_uniffi", uniffi::constructor)]
    pub fn new(
        current_round: i32,online_money: i32,total_money: i32,
    ) -> GetSupply200Response {
        GetSupply200Response {
            current_round: current_round,
            online_money: online_money,
            total_money: total_money,
        }
    }
}



impl crate::JsonSerializable for GetSupply200Response {}


crate::auto_impl_json_ffi!(GetSupply200Response, get_supply200_response);

