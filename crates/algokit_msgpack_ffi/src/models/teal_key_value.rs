/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[cfg(feature = "ffi_wasm")]
use wasm_bindgen::prelude::wasm_bindgen;

/// TealKeyValue : Represents a key-value pair in an application store.



#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_wasm", derive(tsify_next::Tsify))]
#[cfg_attr(feature = "ffi_wasm", tsify(into_wasm_abi, from_wasm_abi))]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct TealKeyValue {
    #[serde(rename = "key")]
    
    
    
    pub key: String,
    #[serde(rename = "value")]
    
    
    
    pub value: models::TealValue,
}

impl TealKeyValue {
    /// Represents a key-value pair in an application store.
    #[cfg_attr(feature = "ffi_uniffi", uniffi::constructor)]
    pub fn new(
        key: String,value: models::TealValue,
    ) -> TealKeyValue {
        TealKeyValue {
            key: key,
            value: value,
        }
    }
}



impl crate::JsonSerializable for TealKeyValue {}

impl crate::MsgpackEncodable for TealKeyValue {}
impl crate::MsgpackDecodable for TealKeyValue {}

crate::auto_impl_json_ffi!(TealKeyValue, teal_key_value);

