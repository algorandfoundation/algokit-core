/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

use serde_with::serde_as;

/// ApplicationStateOperation : An operation against an application's global/local/box state.
#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[cfg_attr(feature = "ffi_wasm", derive(tsify_next::Tsify))]
#[cfg_attr(feature = "ffi_wasm", tsify(into_wasm_abi, from_wasm_abi))]
#[cfg_attr(feature = "ffi_uniffi", derive(uniffi::Record))]
pub struct ApplicationStateOperation {
    /// Operation type. Value `w` is **write**, `d` is **delete**.
    #[serde(rename = "operation")]
    
    
    
    pub operation: String,
    /// Type of application state. Value `g` is **global state**, `l` is **local state**, `b` is **boxes**.
    #[serde(rename = "app-state-type")]
    
    
    
    pub app_state_type: String,
    /// The key (name) of the global/local/box state.
    #[serde_as(as = "serde_with::base64::Base64")]
    #[serde(rename = "key")]
    
    
    
    pub key: Vec<u8>,
    #[serde(rename = "new-value", skip_serializing_if = "Option::is_none")]
    
    #[cfg_attr(feature = "ffi_wasm", tsify(optional))]
    #[cfg_attr(feature = "ffi_uniffi", uniffi(default = None))]
    pub new_value: Option<models::AvmValue>,
    /// For local state changes, the address of the account associated with the local state.
    #[serde(rename = "account", skip_serializing_if = "Option::is_none")]
    
    #[cfg_attr(feature = "ffi_wasm", tsify(optional))]
    #[cfg_attr(feature = "ffi_uniffi", uniffi(default = None))]
    pub account: Option<String>,
}

impl ApplicationStateOperation {
    /// An operation against an application's global/local/box state.
    pub fn new(operation: String, app_state_type: String, key: Vec<u8>) -> ApplicationStateOperation {
        ApplicationStateOperation {
            operation,
            app_state_type,
            key,
            new_value: None,
            account: None,
        }
    }
}

impl crate::JsonSerializable for ApplicationStateOperation {}

impl crate::MsgpackDecodable for ApplicationStateOperation {}

